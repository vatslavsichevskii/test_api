version: '3.8'
# services:
#   api:
#     container_name: test-task-api
#     image: node:18-alpine
#     build:
#       context: ./app
#       target: "${NODE_ENV}"
#       dockerfile: Dockerfile
#     entrypoint: ["npm", "run", "start:${NODE_ENV}"]
#     environment:
#       NODE_ENV: ${NODE_ENV}
#     ports:
#       - ${PORT}:${PORT}
#     networks:
#       - test-task-network
#     depends_on:
#       - db
#     restart: unless-stopped
  
#   db:
#     container_name: test-task-db
#     image: postgres:latest
#     networks:
#       - test-task-network
#     environment:
#       POSTGRES_HOST: ${POSTGRES_HOST}
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DATABASE: ${POSTGRES_DATABASE}
#       PG_DATA: /var/lib/postgresql/data
#     ports:
#       - ${POSTGRES_PORT}:${POSTGRES_PORT}
#     volumes:
#       - ./pgdata/data:/var/lib/postgresql/data
# networks:
#   test-task-network:

services:
  db:
    image: postgres:latest
    restart: always
    container_name: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    env_file:
    - ./src/configs/dev.env
    ports:
      - '5432:5432'

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-docker-postgres
    ports:
      - '3000:3000'
    env_file:
    - ./src/configs/dev.env
    depends_on:
      - db
    volumes:
      - ./src:/app/src
      - ./node_modules:/app/node_modules

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: nest-pgadmin4
    env_file:
    - ./src/configs/dev.env
    ports:
      - '5050:80'
    volumes: 
      - ./pgadmin-data:/var/lib/pgadmin
    depends_on:
      - db

volumes:
  pgdata:
  pgadmin-data: